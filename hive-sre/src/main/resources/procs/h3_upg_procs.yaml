processes:
  - type:                     "dbSet"
    id:                       1
    active:                   true
    name:                     "Hive 3 Upgrade Checks - Locations Scan"
    queryDefinitionReference: "/hive_u3_queries.yaml"
    dbListingQuery:           "db_tbl_count"
    listingColumns: ["name" ,"tbl_name" , "tbl_type" ,"part_name" , "path_location"]
    pathsListingQuery:        "tbl_part_locations"
    checks:
      - name:                     "Missing Directories"
        header:                   "# Missing Directory Remediation Options\n
        _NOTE:_ Beware of \"Smart Quote\" AND other conversions via Markdown Renderers. Copy/paste from 'raw' text to ensure compatibility.\n
        #### Rendered text may not work in 'Hive' or 'Hadoop CLI'\n
        #### Parse either of these options and run in 'hive' or 'hive-sre-cli' (alias for [hadoopcli](https://github.com/dstreev/hadoop-cli) )\n
        \n| DB.Table:Partition Spec | Hive SQL (recommended) | HDFS |\n|:---|:---|:---|"
        errorDescription:         "Scan Actions"
        successDescription:       "Issues"
        errorFilename:            loc_scan_missing_dirs.md
        successFilename:          loc_scan_missing_dirs_issue.txt
        invertCheck:              false
        pathCommand:              "lsp -f path -self -t \"%5$s\""
        reportOnResults:          false
        reportOnPath:             true
        processOnError:           true
        processOnSuccess:         false
        checkCalculations:
          partitionCheck:
            RECORDS:
              test: "if (\"%4$s\".equals(\" \")) true; else false;"
              pass: "\"| %1$s.%2$s | DROP TABLE IF EXIST `%1$s`.`%2$s`; | mkdir -p \\\"%5$s\\\" |\""
              fail: "\"| %1$s.%2$s:\" + com.streever.hive.sre.Utils.dirToPartitionSpec('%4$s') + \" | ALTER TABLE `%1$s`.`%2$s` DROP IF EXISTS PARTITION (\" + com.streever.hive.sre.Utils.dirToPartitionSpec('%4$s') + \"); | mkdir -p \\\"%5$s\\\" |\""
              params: ["hive"]

  - type:                     "dbSet"
    id:                       2
    active:                   true
    name:                     "Hive 3 Upgrade Checks - Bad ACID ORC Filenames"
    queryDefinitionReference: "/hive_u3_queries.yaml"
    dbListingQuery:           "db_tbl_count"
    listingColumns: ["db_name" ,"tbl_name" , "tbl_type" ,"part_name" , "path_check"]
    pathsListingQuery:        "tbl_mngd_non_acid_locations"
    checks:
      - name:                     "Bad Filename Format for ACID ORC Conversion"
        header:                   "# Bad ACID ORC Filenames\n> File naming conventions that could prevent a 'managed' ORC table from transitioning to an 'ACID' table\n\n
                              | DB.Table:Partition | Path | Filename |\n|:---|:---|:---|"
        invertCheck:              true
        errorDescription:         "Bad ACID Filenames"
        successDescription:       "Bad ACID Filename Issues"
        errorFilename:            "bad_filenames_for_orc_conversion.md"
        successFilename:          "bad_filename_issues.txt"
        pathCommand:              "lsp -R -F \"([0-9]+_[0-9]+)|([0-9]+_[0-9]_copy_[0-9]+)|(_orc_acid_version)|(bucket_\\d+(_\\d+)?)|(_metadata_acid)\" -i -Fe file -v -f parent,file \"%5$s\""
        onErrorRecordCommand:     "| %1$s.%2$s:%4$s | %6$s | %7$s |\""
        reportOnResults:          true
        reportOnPath:             true
        processOnError:           true
        processOnSuccess:         false
  #        checkCalculations:
  #          managedCheck:
  #            RECORDS:
  #              test: "if ( \"%3$s\".equals(\"MANAGED\\_TABLE\")) true; else false;"
  #              pass: "\"| %1$s.%2$s:%4$s | %5$s | %7$s |\""
  - type:                     "dbSet"
    id:                       3
    active:                   true
    name:                     "-- Hive 3 Upgrade Checks - Managed Non-ACID to ACID Table Migrations"
    queryDefinitionReference: "/hive_u3_queries.yaml"
    errorDescription:         "Issues"
    successDescription:       "SQL Conversion Scipt"
    errorFilename:            "managed_upgrade_2_acid_issues.txt"
    successFilename:          "managed_upgrade_2_acid.sql"
    dbListingQuery:           "db_tbl_count"
    listingColumns: ["db_name" ,"tbl_name" , "tbl_type" ,"tbl_location"]
    pathsListingQuery:        "managed_2_acid"
    checks:
      - name:                   "Ownership Check"
        invertCheck:            false
        pathCommand:            "lsp -f user -self \"%4$s\""
        onSuccessPathCommand:   "\"Rewrite database table: %1$s.%2$s [Partition: \" + com.streever.hive.sre.Utils.dirToPartitionSpec('%4$s') + \"]"
        onSuccessRecordCommand: "# Bad filename %2$s in directory: %1$s "
        reportOnResults:        false
        reportOnPath:           false
        processOnError:         false
        processOnSuccess:       true
        checkCalculations:
          ownershipCheck:
            RECORDS:
              test: "if (\"%5$s\".equals(\"%6$s\")) true; else false;"
              pass: "\"-- Table is owned by '%5$s' and not currently ACID.\\n
                    -- This table will be migrated unless changed.\\n
                    ALTER TABLE %1$s.%2$s SET TBLPROPERTIES('EXTERNAL'='TRUE', 'external.table.purge'='true')\\;\""
              fail: "\"-- Table is owned by '%5$s', not '%6$s', and NOT currently ACID.\\n
                    -- This table 'could' be migrated to an ACID table unless changed.\\n
                    -- Recommend forcing the manual conversion to ensure table isn't inadvertently migrated.\\n
                    ALTER TABLE %1$s.%2$s SET TBLPROPERTIES('EXTERNAL'='TRUE', 'external.table.purge'='true')\\;\""
              params: ["hive"]
  - type:                     "dbSet"
    id:                       4
    active:                   true
    name:                     "-- Hive 3 Upgrade Checks - Compaction Check"
    queryDefinitionReference: "/hive_u3_queries.yaml"
    errorDescription:         "Issues"
    successDescription:       "Compaction SQL Script"
    errorFilename:            "managed_compactions_issues.txt"
    successFilename:          "managed_compactions.sql"
    dbListingQuery:           "db_tbl_count"
    listingColumns: ["name" ,"tbl_name" , "tbl_type" ,"part_name", "path_location"]
    pathsListingQuery:        "managed_tbl_locations"
    checks:
      - name:                 "Compaction Check"
        invertCheck:          false
        pathCommand:          "lsp -R -F .*delta_.* -t -sp -f path \"%5$s\""
#        onSuccessPathCommand: "ALTER TABLE %1$s.%2$s COMPACT 'MAJOR'; TODO: Need to account for Partitions."
        reportOnResults:      false
        reportOnPath:         true
        processOnError:       false
        processOnSuccess:     true
        checkCalculations:
          partitionCheck:
            PATH:
              test: "if (\"%4$s\".trim().length() == 0) true; else false;"
              pass: "\"ALTER TABLE %1$s.%2$s COMPACT 'MAJOR';\""
              fail: "\"ALTER TABLE %1$s.%2$s PARTITION (\" + com.streever.hive.sre.Utils.dirToPartitionSpec('%4$s') + \") COMPACT \\\"MAJOR\\\"\\;\""
              params: ["hive"]

  #  - type: "metastore.query"
  #    id: 5
  #    active: true
  #    name: "Questionable Serde's Check"
  #    queryDefinitionReference: "/hive_u3_queries.yaml"
  #    errorDescription: "Issues"
  #    successDescription: "Tables using non-standard SERDE's"
  #    errorFilename: "hive_questionable_serde_issues.txt"
  #    successFilename: "hive_questionable_serde.txt"
  #    metastoreQueryDefinition:
  #      query: "questionable_serdes"
  #      listingColumns: ["db_name" ,"tbl_name", "tbl_serde_slib"]
  #      resultMessageHeader: "***********************************************************\n
  #                            Listed tables should be review to ensure the Serde is still available.\n
  #                            Missing Serde's can disrupt a Hive Upgrade/Migration Process\n
  #                            ***********************************************************"
  #      resultMessageDetailTemplate: "%1$s.%2$s is using a non-base serde '%3$s'"
  - type:                     "metastore.report"
    id:                       5
    active:                   true
    name:                     "Hive Metastore Checks"
    header:                   "# Hive Metastore Checks"
    queryDefinitionReference: "/hive_u3_queries.yaml"
    errorDescription:         "Processing Issues"
    successDescription:       "Hive Metastore"
    errorFilename:            hms_checks_err.txt
    successFilename:          hms_checks.md
    metastoreQueryDefinitions:
      - query:                       "questionable_serdes"
        listingColumns: ["db_name" ,"tbl_name", "tbl_serde_slib"]
        resultMessageHeader:         "## Questionable Serde's\n
                              > Listed tables should be review to ensure the Serde is still available.\n
                              Missing Serde's can disrupt a Hive Upgrade/Migration Process"
        resultMessageDetailHeader:   " | Database | Table | Serde |\n|:---|:---|:---|"
        resultMessageDetailTemplate: "| %1$s | %2$s | %3$s |"

      - query:                       "managed_tbl_shadows"
        listingColumns: ["db_name" ,"tbl_name", "tbl_location"]
        resultMessageHeader:         "## Managed Shadow Tables"
        resultMessageDetailHeader:   "| Database | Table | Path |\n|:---|:---|:---|"
        resultMessageDetailTemplate: "| %1$s | %2$s | %3$s |"
      - query:                       "db_tbl_part_count"
        listingColumns: ["name" ,"tbl_count", "part_count"]
        resultMessageHeader:         " ## Table Partition Count"
        resultMessageDetailHeader:   "| Database | Tables | Partitions |\n|:---|:---|:---|"
        resultMessageDetailTemplate: "| %1$s | %2$s | %3$s |"
#
#
#  - type: "metastore.query"
#    id: 6
#    active: true
#    name: "Managed Table Shadows"
#    queryDefinitionReference: "/hive_u3_queries.yaml"
#    errorDescription: "Issues"
#    successDescription: "Shadow Tables"
#    errorFilename: "managed_tbl_shadows_issue.txt"
#    successFilename: "managed_tbl_shadows.txt"
#    metastoreQueryDefinition:
#      query: "managed_tbl_shadows"
#      listingColumns: ["db_name" ,"tbl_name", "tbl_location"]
#      resultMessageHeader: "***********************************************************"
#      resultMessageDetailTemplate: "Table %1$s.%2$s at location %3$s is sharing location with another managed table."
#  - type: "metastore.query"
#    id: 7
#    active: true
#    name: "Database / Table / Partition Count"
#    queryDefinitionReference: "/hive_u3_queries.yaml"
#    errorDescription: "Issues"
#    successDescription: "Database / Table / Partition Counts"
#    errorFilename: "db_counts_issue.txt"
#    successFilename: "db_counts.txt"
#    metastoreQueryDefinition:
#      query: "db_tbl_part_count"
#      listingColumns: ["name" ,"tbl_count", "part_count"]
#      resultMessageHeader: "***********************************************************"
#      resultMessageDetailTemplate: "%1$s\t%2$s\t%3$s"